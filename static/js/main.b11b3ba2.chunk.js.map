{"version":3,"sources":["test/DatabaseTester.js","store/actions/actionCreators.js","store/database/asynchHandler.js","components/header/LogOutLink.js","components/header/LoginLink.js","components/header/Header.js","components/login_screen/LoginScreen.js","components/home_screen/WireframeOption.js","components/edit_screen/controls/LabelControl.js","components/edit_screen/controls/TextFieldControl.js","components/edit_screen/controls/ButtonControl.js","components/edit_screen/controls/ContainerControl.js","components/edit_screen/controls/ControlGenerator.js","components/edit_screen/EditArea.js","components/home_screen/HomeScreen.js","components/register_screen/RegisterScreen.js","components/edit_screen/PropertyEditor.js","components/edit_screen/ControlSelection.js","components/edit_screen/EditScreen.js","App.js","serviceWorker.js","config/firebaseConfig.js","store/reducers/authReducer.js","store/reducers/todoListReducer.js","store/reducers/rootReducer.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["DatabaseTester","handleClear","fireStore","getFirestore","collection","get","then","querySnapshot","forEach","doc","id","update","wireframes","handleReset","wireframeJson","this","props","profile","administrator","className","onClick","href","to","React","Component","connect","state","auth","firebase","registerSuccess","type","registerError","error","logoutSuccess","LogOutLink","handleLogout","signOut","initials","compose","firebaseConnect","dispatch","getState","actionCreators","logoutHandler","LoginLink","switch","setState","onLoginPage","window","location","includes","e","refresh","Header","links","uid","isAdmin","alignLinks","brand","menuIcon","center","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","LoginScreen","email","password","handleChange","target","value","handleSubmit","preventDefault","authData","credentials","login","authError","icon","label","onChange","node","style","marginRight","waves","signInWithEmailAndPassword","console","log","catch","err","loginHandler","WireframeOption","default","key","wireframe","name","LabelControl","control","newPositionX","positionX","newPositionY","positionY","handleDragStop","data","x","y","handleResizeStop","dir","ref","delta","position","widthChange","width","heightChange","height","backgroundColor","borderWidth","borderThickness","borderRadius","borderStyle","borderColor","fontSize","textSize","onDragStop","onResizeStop","bounds","theChosenControl","parseInt","setControlBeingEdited","text","TextFieldControl","disabled","ButtonControl","small","ContainerControl","stop-propagation","ControlGenerator","EditArea","controlBeingEdited","updatable","updateDimensions","dimensionXinput","document","getElementById","dimensionYinput","newDimensionX","newDimensionY","dimensionX","dimensionY","makeUpdatable","preview","defaultValue","deselectControl","controls","map","HomeScreen","usersWireframes","moveToWireframe","wireframeSelected","randomAdjectives","handleNewWireframe","firestore","userID","userWireframes","Math","floor","random","length","push","lastAccessed","toast","handleSelectChange","wireframeName","M_FormSelect","input","getWireframeOfName","Date","toISOString","mostRecentWireframe","deleteWireframe","indexToRemove","i","splice","redirect","sort","item1","item2","fixKeys","EditAreaPreview","pathname","getUsersWireframes","reorderByAccessDate","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","right","header","trigger","actions","flat","firestoreConnect","RegisterScreen","firstName","lastName","newUser","register","createUserWithEmailAndPassword","resp","user","set","registerHandler","PropertyEditor","controlToEdit","handlePropertyChange","handleBackgroundColorChange","color","undefined","hex","handleBorderColorChange","setWhiteBackground","controlSelected","placeholder","ControlSelection","closing","closeWireframe","zoomIn","wireframeZone","getAttribute","setAttribute","zoomOut","large","saveData","createNewControl","EditScreen","wireframeControls","deleteControl","remove","body","onkeydown","ctrlKey","keyCode","duplicateControl","removeControl","controlToDuplicate","controlCopy","Object","assign","controlToRemove","configure","basename","exact","path","component","Boolean","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initState","authReducer","action","message","todoLists","todoListReducer","rootReducer","combineReducers","todoList","firestoreReducer","firebaseReducer","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b11b3ba2.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { getFirestore } from 'redux-firestore';\nimport wireframeJson from './WireframeTestData.json';\nimport { Redirect } from 'react-router-dom';\n\nclass DatabaseTester extends React.Component {\n\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('users').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                // Reset the wireframes of each account\n                    fireStore.collection('users').doc(doc.id).update({\n                        wireframes : []\n                    })\n            })\n        });\n    }\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('users').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                // Reset the wireframes of each account\n                    fireStore.collection('users').doc(doc.id).update({\n                        wireframes : wireframeJson.wireframes\n                    })\n            })\n        });\n    }\n\n    render() {\n        const {profile} = this.props;\n        const isAdmin = profile.administrator;\n        if (!isAdmin){\n            return <Redirect to=\"/\"/>;\n        }\n        return (\n            <div className = \"testDiv\">\n                <button className=\"testButton\" onClick={this.handleClear}>Clear Database</button>\n                <button className=\"testButton\" onClick={this.handleReset}>Reset Database</button>\n                <p><a href = \"https://console.firebase.google.com/u/0/project/wireframer-41732/database\">Link to my database.</a></p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        auth: state.firebase.auth,\n        firebase: state.firebase,\n        profile : state.firebase.profile\n    };\n}\n\nexport default connect(mapStateToProps)(DatabaseTester);","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\nexport function registerSuccess() {\n    return { type: 'REGISTER_SUCCESS' }\n};\nexport function registerError(error) { \n    return { type: 'REGISTER_ERROR', error }\n};\nexport function loginSuccess() {\n    return { type: 'LOGIN_SUCCESS' }\n};\nexport function loginError(error) {\n    return { type: 'LOGIN_ERROR', error }\n};\nexport function logoutSuccess() {\n    return { type: 'LOGOUT_SUCCESS' }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\nexport function createTodoList(todoList) {\n    return {\n        type: 'CREATE_TODO_LIST',\n        todoList\n    }\n}\nexport function createTodoListError(error) {\n    return {\n        type: 'CREATE_TODO_LIST_ERROR',\n        error\n    }\n}","import * as actionCreators from '../actions/actionCreators.js'\n\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      console.log(\"LOGIN_SUCCESS\");\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSuccess);\n    });\n};\n\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n        newUser.email,\n        newUser.password,\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\n        administrator : false,\n        wireframes : []\n    })).then(() => {\n        dispatch(actionCreators.registerSuccess);\n    }).catch((err) => {\n        dispatch(actionCreators.registerError);\n    }); \n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { logoutHandler } from '../../store/database/asynchHandler'\r\n\r\nclass LogOutLink extends React.Component {\r\n\r\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\r\n  handleLogout = () => {\r\n    const { firebase } = this.props;\r\n    this.props.signOut(firebase);\r\n  }\r\n\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ul>\r\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>Log Out</NavLink></li>\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\r\n      </ul>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signOut: firebase => dispatch(logoutHandler(firebase)),\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(null, mapDispatchToProps),\r\n)(LogOutLink);","import React from 'react';\r\nimport { NavItem } from 'react-materialize';\r\nimport {Link} from 'react-router-dom';\r\nclass LoginLink extends React.Component {\r\n  state = {\r\n    switch : 1,\r\n  }\r\n  refresh(){\r\n    this.setState({});\r\n  }\r\n  render() {\r\n    const onLoginPage = (window.location.href.includes(\"/#/login\"));\r\n    return (\r\n      <ul className = \"right\" >\r\n        {!onLoginPage ? <li onClick = {(e) => this.refresh()}><Link to=\"/login\">Login</Link></li> : <li onClick = {(e) => this.refresh()}><Link to=\"/register\">Register</Link></li>}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginLink;","import React, { Component } from 'react'\r\nimport {Navbar, Icon, NavItem} from 'react-materialize'\r\nimport LogOutLink from './LogOutLink'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport LoginLink from './LoginLink';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n       // Header needs to know if it's on the login page.\r\n        const {auth, profile } = this.props;\r\n        const links = auth.uid ? <LogOutLink profile={profile} /> : <LoginLink/>;\r\n        const isAdmin = profile.administrator;\r\n        return (\r\n            // Hard routing to the places with href, is this OK instead of using navlink? \r\n            <Navbar\r\n                alignLinks=\"right\"\r\n                brand={<NavLink to = \"/\" className=\"brand-logo center\">Wireframer</NavLink>}\r\n                menuIcon={<Icon>menu</Icon>}\r\n                center\r\n                options={{\r\n                draggable: true,\r\n                edge: 'left',\r\n                inDuration: 250,\r\n                onCloseEnd: null,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                outDuration: 200,\r\n                preventScrolling: true\r\n                }}\r\n            >\r\n            {isAdmin ?\r\n             <NavLink to = \"/databaseTester\">\r\n                  Database\r\n             </NavLink> : <p></p>\r\n            }\r\n            {links}\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps),\r\n)(Header);\r\n\r\n/*\r\n<div id = \"header\">\r\n                <a id=\"homeLink\" href=\"http://localhost:3000/\">Wireframer</a>\r\n                {true ? <LoginLink/> : false}\r\n                <a className=\"right\" href=\"http://localhost:3000/databaseTester\">Database Tester</a>\r\n            </div>\r\n            */\r\n","import React, { Component } from 'react'\r\nimport {TextInput, Button} from 'react-materialize'\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { loginHandler } from '../../store/database/asynchHandler'\r\n\r\nclass LoginScreen extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n      }\r\n    \r\n    handleChange = (e) => {\r\n        const { target } = e;\r\n    \r\n        this.setState(state => ({\r\n          ...state,\r\n          [target.id]: target.value,\r\n        }));\r\n      }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // As we use react-redux-firebas-v3 we need to pass firebase object to\r\n        // authActions to be authorized by using firebse.auth method\r\n        const { props, state } = this;\r\n        const { firebase } = props;\r\n        const credentials = { ...state };\r\n        const authData = {\r\n          firebase,\r\n          credentials,\r\n        };\r\n        props.login(authData);\r\n      }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) {\r\n          return <Redirect to=\"/\" />;\r\n        }    \r\n        return (\r\n            <div>\r\n                <TextInput\r\n                    icon=\"email\"\r\n                    label=\"Email\"\r\n                    id = \"email\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                <TextInput\r\n                    icon=\"lock\"\r\n                    label=\"Password\"\r\n                    password\r\n                    id = \"password\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                  <Button\r\n                    node=\"button\"\r\n                    style={{\r\n                    marginRight: '5px'\r\n                    }}\r\n                    waves=\"light\"\r\n                    onClick = {this.handleSubmit}\r\n                >\r\n                    Login\r\n                </Button>\r\n                {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    login: authData => dispatch(loginHandler(authData)),\r\n  });\r\n  \r\n  // We need firebaseConnect function to provide to this component\r\n  // firebase object with auth method.\r\n  // You can find more information on the link below\r\n  // http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\r\n  export default compose(\r\n    firebaseConnect(),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n  )(LoginScreen);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class WireframeOption extends Component {\r\n    render() {\r\n        return (\r\n            <option default key = {this.props.key}>{this.props.wireframe.name}</option>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Rnd} from 'react-rnd'\r\n\r\n\r\nexport default class LabelControl extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    state = {\r\n        control : this.props.control,\r\n        newPositionX : this.props.control.positionX,\r\n        newPositionY : this.props.control.positionY,\r\n    }\r\n    handleDragStop = (e, data) =>{\r\n        const control = this.state.control;\r\n        control.positionX = data.x;\r\n        control.positionY = data.y;\r\n    }\r\n    handleResizeStop = (e,dir, ref, delta, position) =>{\r\n        let widthChange = delta.width;\r\n        let heightChange = delta.height;\r\n        const control = this.props.control;\r\n        control.width = control.width + widthChange;\r\n        control.height = control.height + heightChange;\r\n        this.setState({});\r\n    }\r\n    render() {\r\n        const control = this.props.control;\r\n        const style = {\r\n            backgroundColor : control.backgroundColor,\r\n            borderWidth : control.borderThickness + \"px \" + control.borderThickness+\"px\",\r\n            borderRadius : control.borderRadius +\"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: control.borderColor,\r\n            position : \"absolute\",\r\n            width : control.width +\"px\",\r\n            height : control.height + \"px\",\r\n            fontSize : control.textSize +\"px\",\r\n        }\r\n        return (\r\n            <Rnd\r\n            onDragStop = {this.handleDragStop}\r\n            onResizeStop = {this.handleResizeStop}\r\n            bounds = \"parent\"\r\n            default={{\r\n                x: control.positionX,\r\n                y: control.positionY,\r\n                width: style.width,\r\n                height: style.height,\r\n              }}\r\n        >\r\n            <div className = {this.props.theChosenControl ? \"box\" : \"\"} style = {{width : (parseInt(control.width) + 20) + \"px\", height: (parseInt(control.height)) +\"px\"}}>\r\n                <div className = \"labelControl\" style = {style} onClick = {(e)=>this.props.setControlBeingEdited(control.key,e)}>\r\n                {control.text}\r\n            </div>\r\n            </div>\r\n            </Rnd>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {TextInput} from 'react-materialize'\r\nimport {Rnd} from 'react-rnd'\r\n\r\n\r\nexport default class TextFieldControl extends Component {\r\n    state = {\r\n        control : this.props.control,\r\n        newPositionX : this.props.control.positionX,\r\n        newPositionY : this.props.control.positionY,\r\n    }\r\n    // This shows the data x / y relative to it's starting position. When saving, do current X - data.x, current Y - data.y to get the relative value\r\n    handleDragStop = (e, data) =>{\r\n        const control = this.state.control;\r\n        control.positionX = data.x;\r\n        control.positionY = data.y;\r\n    }\r\n    handleResizeStop = (e,dir, ref, delta, position) =>{\r\n        let widthChange = delta.width;\r\n        let heightChange = delta.height;\r\n        const control = this.props.control;\r\n        control.width = control.width + widthChange;\r\n        control.height = control.height + heightChange;\r\n        this.setState({});\r\n    }\r\n    render() {\r\n        const control = this.props.control;\r\n        const style = {\r\n            backgroundColor : control.backgroundColor,\r\n            borderWidth : control.borderThickness + \"px \" + control.borderThickness+\"px\",\r\n            borderRadius : control.borderRadius +\"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: control.borderColor,\r\n            position: \"absolute\",\r\n            width : control.width +\"px\",\r\n            height : control.height + \"px\",\r\n            fontSize : control.textSize +\"px\",\r\n        }\r\n        return (\r\n            <Rnd\r\n            onDragStop = {this.handleDragStop}\r\n            onResizeStop = {this.handleResizeStop}\r\n            bounds = \"parent\"\r\n            default={{\r\n                x: control.positionX,\r\n                y: control.positionY,\r\n                width: style.width,\r\n                height: style.height,\r\n              }}\r\n        >\r\n            <div className = {this.props.theChosenControl ? \"box\" : \"\"} style = {{width : (parseInt(control.width) + 20) + \"px\", height: (parseInt(control.height)) +\"px\"}}>\r\n                <div className = \"textfieldControl\" style = {style} onClick = {(e)=>this.props.setControlBeingEdited(control.key,e)}>\r\n                <TextInput label={control.text}  disabled />\r\n                </div>\r\n            </div>\r\n            </Rnd>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Button} from 'react-materialize'\r\nimport {Rnd} from 'react-rnd'\r\nexport default class ButtonControl extends Component {\r\n    state = {\r\n        control : this.props.control,\r\n        newPositionX : this.props.control.positionX,\r\n        newPositionY : this.props.control.positionY,\r\n    }\r\n    handleDragStop = (e, data) =>{\r\n        const control = this.state.control;\r\n        control.positionX = data.x;\r\n        control.positionY = data.y;\r\n    }\r\n    handleResizeStop = (e,dir, ref, delta, position) =>{\r\n        let widthChange = delta.width;\r\n        let heightChange = delta.height;\r\n        const control = this.props.control;\r\n        control.width = control.width + widthChange;\r\n        control.height = control.height + heightChange;\r\n        this.setState({});;\r\n    }\r\n    render() {\r\n        const control = this.props.control;\r\n        const style = {\r\n            width : control.width +\"px\",\r\n            height : control.height + \"px\",\r\n            fontSize : control.textSize +\"px\",\r\n            backgroundColor : control.backgroundColor,\r\n            borderWidth : control.borderThickness + \"px \" + control.borderThickness+\"px\",\r\n            borderRadius : control.borderRadius +\"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: control.borderColor,\r\n        }\r\n        return (\r\n            <Rnd\r\n            onDragStop = {this.handleDragStop}\r\n            onResizeStop = {this.handleResizeStop}\r\n            bounds = \"parent\"\r\n            default={{\r\n                x: control.positionX,\r\n                y: control.positionY,\r\n                width: style.width,\r\n                height: style.height,\r\n              }}\r\n        >   <div className = {this.props.theChosenControl ? \"box\" : \"\"} style = {{width : (parseInt(control.width) + 20) + \"px\", height: (parseInt(control.height)) +\"px\"}}>\r\n                <Button className = \"buttonControl\"\r\n                    node=\"a\"\r\n                    small\r\n                    style = {style} onClick = {(e)=>this.props.setControlBeingEdited(control.key,e)}\r\n                    waves=\"light\"\r\n                > {control.text}\r\n                </Button>\r\n            </div>\r\n            </Rnd>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Rnd} from 'react-rnd'\r\n\r\n\r\n// Have a control component that will read in a control and pass in one of these bad\r\n// boys based on their label. It should only get here if it\r\n// is a container.\r\nexport default class ContainerControl extends Component {\r\n    state = {\r\n        control : this.props.control,\r\n        // Save the new positions only if the save is clicked.\r\n        newPositionX : this.props.control.positionX,\r\n        newPositionY : this.props.control.positionY,\r\n    }\r\n    // Every control knows it's last possibly new positionX and Y.\r\n    handleDragStop = (e, data) =>{\r\n        const control = this.props.control;\r\n        control.positionX = data.x;\r\n        control.positionY = data.y;\r\n    }\r\n    handleResizeStop = (e,dir, ref, delta, position) =>{\r\n        let widthChange = delta.width;\r\n        let heightChange = delta.height;\r\n        const control = this.props.control;\r\n        control.width = control.width + widthChange;\r\n        control.height = control.height + heightChange;\r\n        this.setState({});\r\n    }\r\n    render() {\r\n        const control = this.props.control;\r\n        const style = {\r\n            backgroundColor : control.backgroundColor,\r\n            borderWidth : control.borderThickness + \"px \" + control.borderThickness+\"px\",\r\n            borderRadius : control.borderRadius +\"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: control.borderColor,\r\n            position : \"absolute\",\r\n            width : control.width +\"px\",\r\n            height : control.height + \"px\",\r\n            fontSize : control.textSize +\"px\",\r\n        }\r\n        return (\r\n            <Rnd\r\n                onDragStop = {this.handleDragStop}\r\n                onResizeStop = {this.handleResizeStop}\r\n                bounds = \"parent\"\r\n                stop-propagation=\"true\"\r\n                default={{\r\n                    x: control.positionX,\r\n                    y: control.positionY,\r\n                    width: style.width,\r\n                    height: style.height,\r\n                  }}\r\n            >\r\n            <div className = {this.props.theChosenControl ? \"box\" : \"\"} style = {{width : (parseInt(control.width) + 20) + \"px\", height: (parseInt(control.height)) +\"px\"}}>\r\n                <div className = \"containerControl\" style = {style} onClick = {(e)=>this.props.setControlBeingEdited(control.key,e)}>{control.text}</div>\r\n            </div>\r\n            </Rnd>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport LabelControl from './LabelControl';\r\nimport TextFieldControl from './TextFieldControl';\r\nimport ButtonControl from './ButtonControl';\r\nimport ContainerControl from './ContainerControl';\r\n\r\nexport default class ControlGenerator extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    // If the control is default set to outside the bounds of the wireframe, it will show there at first and need to be snapped in.\r\n    // I dont know if I need to accoutn for this however, since the wireframe is to be made by the user, not loaded using a cfg.\r\n    render() {\r\n        //console.log(\"ControlGenerator Render called.\");\r\n        const control = this.props.control;\r\n        if (control.type === \"container\"){\r\n            return (\r\n                <ContainerControl control = {control} setControlBeingEdited = {this.props.setControlBeingEdited} theChosenControl = {this.props.theChosenControl}/>\r\n            )\r\n        }\r\n        if (control.type === \"label\"){\r\n            return (\r\n                <LabelControl control = {control} setControlBeingEdited = {this.props.setControlBeingEdited} theChosenControl = {this.props.theChosenControl}/>\r\n            )\r\n        }\r\n        if (control.type === \"button\"){\r\n            return (\r\n                <ButtonControl control = {control} setControlBeingEdited = {this.props.setControlBeingEdited} theChosenControl = {this.props.theChosenControl}/>\r\n            )\r\n        }\r\n        if (control.type === \"textfield\"){\r\n            return (\r\n                <TextFieldControl control = {control} setControlBeingEdited = {this.props.setControlBeingEdited} theChosenControl = {this.props.theChosenControl}/>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ControlGenerator from './controls/ControlGenerator';\r\nimport Button from 'react-materialize/lib/Button';\r\n\r\nexport default class EditArea extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    state = {\r\n        wireframe : this.props.wireframe,\r\n        controlBeingEdited : this.props.controlBeingEdited,\r\n        updatable : false,\r\n    }\r\n    updateDimensions = () =>{\r\n        let wireframe = this.props.wireframe;\r\n        let dimensionXinput = document.getElementById(\"dimensionXchange\");\r\n        let dimensionYinput = document.getElementById(\"dimensionYchange\");\r\n        let newDimensionX = parseInt(dimensionXinput.value);\r\n        let newDimensionY = parseInt(dimensionYinput.value);\r\n        // Capped at 1200 X and 1500 Y\r\n        if (newDimensionX > 5000 || newDimensionX < 1){\r\n            return;\r\n        }\r\n        if (newDimensionY > 5000 || newDimensionY < 1){\r\n            return;\r\n        }\r\n        wireframe.dimensionX = newDimensionX;\r\n        wireframe.dimensionY = newDimensionY;\r\n        this.setState({\r\n            wireframe : wireframe,\r\n            updatable : false,\r\n        })\r\n    }\r\n\r\n    makeUpdatable = () =>{\r\n        this.setState({\r\n            updatable : true,\r\n        })\r\n    }\r\n    // Bug occurs when changing the array and a KEY and TYPE matches between the old/new\r\n    render() {\r\n        const wireframe = this.props.wireframe;\r\n        //console.table(this.state.wireframe.controls);\r\n        const setControlBeingEdited = this.props.setControlBeingEdited;\r\n        const controlBeingEdited = this.props.controlBeingEdited;\r\n        //this.logicallyOrderControls();\r\n        // states not changing on load!!!!\r\n        //console.log(\"State wireframe : \" + this.state.wireframe.name);\r\n        //console.log(\"Props wireframe : \" + this.props.wireframe.name);\r\n        return (\r\n        <div id = \"editArea\">\r\n            {this.props.preview ? <div></div> : <div className = \"wireframeDetails\">\r\n                <p className = \"wireframeName\">{wireframe.name}</p>\r\n                <p>Width: </p>\r\n                <input className = \"numberInput\" type =\"number\" id =\"dimensionXchange\" defaultValue = {wireframe.dimensionX} onChange = {this.makeUpdatable}></input>\r\n                <p>Height: </p>\r\n                <input className = \"numberInput\" type =\"number\" id=\"dimensionYchange\" defaultValue = {wireframe.dimensionY} onChange = {this.makeUpdatable}></input>\r\n                <p><Button id = \"updateBtn\" onClick = {this.updateDimensions} disabled = {!this.state.updatable}>Update</Button></p>\r\n            </div>}\r\n            <div id = \"wireframeZone\" onClick = {(e)=>this.props.deselectControl(e)} className = \"normalZoom\" style = {{width : wireframe.dimensionX, height: wireframe.dimensionY}}>\r\n                    {this.props.wireframe.controls.map(function(control) { \r\n                        // If it's the control being edited, flag it to be \r\n                        return (\r\n                        <ControlGenerator control ={control} key = {control.key} setControlBeingEdited = {setControlBeingEdited} theChosenControl = {control === controlBeingEdited ? true : false} />\r\n                        );\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Select, Button, Icon, Modal} from 'react-materialize'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { firestoreConnect} from 'react-redux-firebase';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport WireframeOption from './WireframeOption';\r\nimport EditArea from '../edit_screen/EditArea';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nclass HomeScreen extends Component {\r\n    // I'd like to get a preview of the wireframe shown beneath when the option is selected.\r\n    // This doesn't move the most recently accessed to the top. Due to how the selector works. But this can be changed similar to HW3\r\n    state = {\r\n        usersWireframes : null,\r\n        moveToWireframe : null,\r\n        wireframeSelected : null,\r\n        refresh : false,\r\n    }\r\n    randomAdjectives = [\"Fluffy\",\"Pillow\",\"Plant\",\"Patience\",\"Night\",\"Homework\",\"Costco\",\"Salty\",\"Baboon\",\"Mirror\",\"BigFan\",\r\n                        \"Clock\",\"Water\",\"Doggo\",\"Tree\"]\r\n    getUsersWireframes(){\r\n        const {auth} = this.props;\r\n        const userID = auth.uid;\r\n        const firestore = getFirestore();\r\n        firestore.collection('users').doc(userID).get()\r\n        .then(doc =>\r\n            //console.log(doc.data().wireframes)\r\n            this.setState({\r\n                usersWireframes : doc.data().wireframes\r\n            })\r\n        )\r\n    }\r\n\r\n    handleNewWireframe = (e) =>{\r\n        const firestore = getFirestore();\r\n        const {auth} = this.props;\r\n        var userID= auth.uid;\r\n        const userWireframes = this.state.usersWireframes;\r\n        // If the name would be a duplicate, do something different.\r\n        let name = this.randomAdjectives[Math.floor(Math.random() * this.randomAdjectives.length)] + Math.floor(Math.random()*100) + Math.floor(Math.random()*100);\r\n        // Push the new wireframe then update the database.\r\n        userWireframes.push({\r\n            controls : [],\r\n            dimensionX : 1000,\r\n            dimensionY : 900,\r\n            name : name,\r\n            key : userWireframes.length,\r\n            lastAccessed : \"\"\r\n        })\r\n        firestore.collection(\"users\").doc(userID).update({\r\n            wireframes : userWireframes\r\n        })\r\n        // Update after adding.\r\n        toast(\"A new wireframe named \" + name + \" has been created.\");\r\n        this.setState({\r\n            wireframeSelected : userWireframes[userWireframes.length-1]\r\n        })\r\n    }\r\n\r\n    isDuplicateName(usersWireframes, name){\r\n        for (var i=0;i<usersWireframes.length;i++){\r\n            if (usersWireframes[i].name === name){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getWireframeOfName(name){\r\n        const usersWireframes = this.state.usersWireframes;\r\n        for (var i=0;i<usersWireframes.length;i++){\r\n            if (usersWireframes[i].name === name){\r\n                return usersWireframes[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSelectChange = (e) =>{\r\n        let wireframeName = document.getElementById(\"wireframeSelector\").M_FormSelect.input.value;\r\n        let wireframeSelected = this.getWireframeOfName(wireframeName);\r\n        this.setState({\r\n            wireframeSelected : wireframeSelected\r\n        })\r\n    }\r\n    // Currently (The value of the the selector) goes by the name of the wireframe. \r\n    // This can be a problem if two wireframes have the same name.\r\n    // diff between let / const? const is global?\r\n\r\n    // So the idea is that this updates the state and in the render method theres a check where\r\n    // if there is a wireframe to move to, it'll move to it.\r\n    // IT'S ONLY GOING TO THE FIRST ONE\r\n    moveToWireframe = (e) =>{\r\n        const {auth} = this.props;\r\n        const userID = auth.uid;\r\n        const firestore = getFirestore();\r\n        let usersWireframes = this.state.usersWireframes;\r\n        let wireframe = this.state.wireframeSelected;\r\n        wireframe.lastAccessed = new Date().toISOString();\r\n        firestore.collection(\"users\").doc(userID).update({\r\n            wireframes : usersWireframes\r\n        })\r\n        this.setState({\r\n            moveToWireframe : wireframe,\r\n            mostRecentWireframe : wireframe,\r\n        })\r\n    }\r\n    // Same with this\r\n    deleteWireframe = (e) =>{\r\n        const usersWireframes = this.state.usersWireframes;\r\n        let wireframe = this.state.wireframeSelected;\r\n        let key = wireframe.key;\r\n        let indexToRemove = -1;\r\n        // Find what to remove and remove it.\r\n        for (var i=0;i<usersWireframes.length;i++){\r\n            if (usersWireframes[i].key === key){\r\n                indexToRemove = i;\r\n            }\r\n        }\r\n        usersWireframes.splice(indexToRemove, 1);\r\n        // Update the key of the remaining elements\r\n        for (i = indexToRemove; i<usersWireframes.length;i++){\r\n            usersWireframes[i].key = usersWireframes[i].key-1;\r\n        }\r\n        // update the database\r\n        const {auth} = this.props;\r\n        const userID = auth.uid;\r\n        const firestore = getFirestore();\r\n        firestore.collection('users').doc(userID).update({\r\n            wireframes : usersWireframes\r\n        })\r\n        toast(this.state.wireframeSelected.name + \" has been deleted.\")\r\n        this.setState({\r\n            wireframeSelected : null,\r\n            redirect : !this.state.redirect\r\n        });\r\n\r\n    }\r\n    reorderByAccessDate(wireframes){\r\n        wireframes.sort(function(item1,item2){\r\n            if (item1.lastAccessed > item2.lastAccessed){\r\n                console.log(item1.name + \" was accessed more recently than \" + item2.name);\r\n                return -1;\r\n            }\r\n            if (item1.lastAccessed < item2.lastAccessed){\r\n                return 1;\r\n            }\r\n            else{\r\n                return 0;\r\n            }\r\n        });\r\n        this.fixKeys(wireframes);\r\n    }\r\n    fixKeys(wireframes){\r\n        for (var i=0;i<wireframes.length;i++){\r\n            wireframes[i].key = i;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const moveToWireframe = this.state.moveToWireframe;\r\n        let usersWireframes = this.state.usersWireframes;\r\n        let wireframeSelected = this.state.wireframeSelected;\r\n        let EditAreaPreview = wireframeSelected != null ? <EditArea wireframe = {wireframeSelected} preview = {true}/> : <div></div>\r\n        if (this.state.refresh){\r\n            return <Redirect to='/' />\r\n        }\r\n        if (moveToWireframe != null){\r\n            return <Redirect to ={{pathname: \"/editScreen\", state : {wireframe : moveToWireframe, usersWireframes :this.state.usersWireframes}}}></Redirect>\r\n        }\r\n        const {auth} = this.props;\r\n        // Need to try to map each wireframe to an option.\r\n        // Need to disable the MOVE-TO button if there are no wireframes made yet.\r\n        if (auth.uid){\r\n            // At first the wireframes ar empty, call this method to fill them in\r\n            if (this.state.usersWireframes == null){\r\n                this.getUsersWireframes();\r\n                return <div></div>\r\n            }\r\n            this.reorderByAccessDate(usersWireframes);\r\n            return (\r\n                <div className = \"homeScreen\">\r\n                    <div className = \"centerPage\">\r\n                        <Select\r\n                        onChange = {(e)=>this.handleSelectChange(e)}\r\n                        defaultValue = {wireframeSelected != null ? wireframeSelected.name : \"\"}\r\n                        id = \"wireframeSelector\"\r\n                        options={{\r\n                            classes: '',\r\n                            dropdownOptions: {\r\n                            alignment: 'left',\r\n                            autoTrigger: true,\r\n                            closeOnClick: true,\r\n                            constrainWidth: true,\r\n                            container: null,\r\n                            coverTrigger: true,\r\n                            hover: false,\r\n                            inDuration: 150,\r\n                            onCloseEnd: null,\r\n                            onCloseStart: null,\r\n                            onOpenEnd: null,\r\n                            onOpenStart: null,\r\n                            outDuration: 250,\r\n                            }\r\n                        }}\r\n                        >\r\n                        <option value ={false}>Select a Wireframe</option>\r\n                        {usersWireframes.map(wireframe => (\r\n                            <WireframeOption wireframe = {wireframe} key = {wireframe.key}></WireframeOption>\r\n                        ))\r\n                        }\r\n                        </Select>\r\n                        {this.state.wireframeSelected != null ? <div className = \"selectedNotification\">\r\n                            You have selected {wireframeSelected.name}\r\n                        </div> : <div>You have not selected a wireframe yet.</div>}\r\n\r\n                        <div className = \"wireframeOptions\">\r\n                        <Button\r\n                            node=\"button\"\r\n                            type=\"submit\"\r\n                            waves=\"light\"\r\n                            disabled = {wireframeSelected == null ? true : false}\r\n                            onClick = {(e)=>this.moveToWireframe(e)}\r\n                            >\r\n                            Move to {wireframeSelected != null ? wireframeSelected.name : \"wireframe\"}\r\n                            <Icon right>\r\n                                send\r\n                            </Icon>\r\n                            </Button>\r\n                        <Modal header=\"Delete Wireframe\" trigger={\r\n                            <Button disabled = {wireframeSelected == null ? true : false} className =\"deleteWireframeBtn\" waves=\"red\" style={{marginRight: '5px'}}>\r\n                                Delete {wireframeSelected != null ? wireframeSelected.name : \"wireframe\"}\r\n                            </Button>\r\n                        }\r\n                            actions = {[<Button className = \"modal-close\" flat> Close </Button>, <Button flat className = \"modal-close\" onClick = {(e)=>this.deleteWireframe(e)}>Confirm</Button>]}> \r\n                            <p>Are you sure you want to delete {wireframeSelected != null ? wireframeSelected.name : \"this wireframe\"}? </p>\r\n                            <p><b>This action is irreversible.</b></p>\r\n                        </Modal>\r\n                        </div>\r\n                        <Button\r\n                            node=\"button\"\r\n                            type=\"submit\"\r\n                            waves=\"light\"\r\n                            className = \"createNewWireframeBtn\"\r\n                            onClick = {this.handleNewWireframe}\r\n                            >\r\n                            Create a new wireframe!\r\n                        </Button>\r\n                    </div>\r\n                    <div className = \"preview\">{wireframeSelected != null ? \"Preview of \" + wireframeSelected.name : \"\"}</div>\r\n                    <div className = \"wireframePreview\" disabled><div className = \"center\">{EditAreaPreview}</div></div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'wireframes' },\r\n    ]),\r\n)(HomeScreen);","import React, { Component } from 'react'\r\nimport {TextInput, Button} from 'react-materialize'\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { registerHandler } from '../../store/database/asynchHandler'\r\n\r\nclass RegisterScreen extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n      }    \r\n    handleChange = (e) => {\r\n    const { target } = e;\r\n    this.setState(state => ({\r\n        ...state,\r\n        [target.id]: target.value,\r\n    }));\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const newUser = { ...state };\r\n\r\n    props.register(newUser, firebase);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                 <TextInput\r\n                    icon=\"email\"\r\n                    label=\"Email\"\r\n                    id = \"email\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                <TextInput\r\n                    icon=\"lock\"\r\n                    label=\"Password\"\r\n                    id = \"password\"\r\n                    password\r\n                    onChange = {this.handleChange}\r\n                />\r\n                <TextInput\r\n                    icon=\"person_pin\"\r\n                    label=\"First Name\"\r\n                    id = \"firstName\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                <TextInput\r\n                    icon=\"person_pin\"\r\n                    label=\"Last Name\"\r\n                    id = \"lastName\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                  <Button\r\n                    node=\"button\"\r\n                    style={{\r\n                    marginRight: '5px'\r\n                    }}\r\n                    waves=\"light\"\r\n                    onClick = {(e)=>this.handleSubmit(e)}\r\n                >\r\n                    Register\r\n                </Button>\r\n                {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\r\n  });\r\n  \r\n  export default compose(\r\n    firebaseConnect(),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n  )(RegisterScreen);","import React, { Component } from 'react'\r\nimport {TextInput} from 'react-materialize'\r\n//https://casesandberg.github.io/react-color/  --v\r\nimport { SliderPicker } from 'react-color';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport Button from 'react-materialize/lib/Button';\r\n\r\n\r\n\r\n// Need access to user's ID and the wireframe this is coming from\r\nexport default class PropertyEditor extends Component {\r\n    state = {\r\n        control : this.props.controlToEdit\r\n    }\r\n\r\n    // Once map state to props is working, set state won't be necessary and I can just update the database.\r\n    // Maybe add the option to wipe background color.\r\n    handleChange = (e) => {\r\n        if (this.props.controlToEdit === null){\r\n            return;\r\n        }\r\n        const {target} = e;\r\n        const control = this.props.controlToEdit;\r\n        if (target.id === \"controlText\"){\r\n            control.text = target.value;\r\n            this.props.handlePropertyChange();\r\n            this.setState({\r\n                control: control\r\n            })\r\n        }\r\n        if (target.id === \"controlTextSize\"){\r\n            control.textSize = target.value;\r\n            this.props.handlePropertyChange();\r\n            this.setState({\r\n                control: control\r\n            })\r\n        }\r\n        if (target.id === \"controlBorderThickness\"){\r\n            control.borderThickness = target.value;\r\n            this.props.handlePropertyChange();\r\n            this.setState({\r\n                control: control\r\n            })\r\n        }\r\n        if (target.id === \"controlBorderRadius\"){\r\n            control.borderRadius= target.value;\r\n            this.props.handlePropertyChange();\r\n            this.setState({\r\n                control: control\r\n            })\r\n        }\r\n    }\r\n    handleBackgroundColorChange = (color) =>{\r\n        if (this.props.controlToEdit === null){\r\n            return;\r\n        }\r\n        const control = this.props.controlToEdit;\r\n        if (color.hex === undefined){\r\n            control.backgroundColor = \"#FFFFFF\"\r\n        }else{\r\n            control.backgroundColor = color.hex;\r\n        }\r\n        this.props.handlePropertyChange();\r\n        this.setState({\r\n            control : control\r\n        })\r\n    }\r\n    handleBorderColorChange = (color) =>{\r\n        if (this.props.controlToEdit === null){\r\n            return;\r\n        }\r\n        const control = this.props.controlToEdit;\r\n        control.borderColor = color.hex;\r\n        this.props.handlePropertyChange();\r\n        this.setState({\r\n            control : control\r\n        })\r\n    }\r\n\r\n    setWhiteBackground = ()=>{\r\n        this.handleBackgroundColorChange(\"#FFFFFF\");\r\n    }\r\n    render() {\r\n        //console.log(\"PropertyEditor Render called.\");\r\n        const control = this.props.controlToEdit;\r\n        const controlSelected = (this.props.controlToEdit != null);\r\n        return (\r\n            <div className =\"propertyEditor\">\r\n                Properties\r\n                <TextInput placeholder=\"Control Text\" value = {controlSelected ? control.text : \"\"} id=\"controlText\" onChange={this.handleChange}/>\r\n                <div className =\"property\">\r\n                Font-size: \r\n                <TextInput type = \"number\" value = {controlSelected ? control.textSize : 0} id = \"controlTextSize\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className =\"property\">\r\n                Background:\r\n                <SliderPicker color = {controlSelected ? control.backgroundColor : \"white\"} id = \"backgroundColor\" onChange={this.handleBackgroundColorChange}/>\r\n                <Button className = \"backgroundClearBtn\" flat onClick = {this.setWhiteBackground}>Clear</Button>\r\n                </div>\r\n                <div className =\"property\">\r\n                Border Color:\r\n                <SliderPicker color = {controlSelected ? control.borderColor : \"black\"} id = \"borderColor\" onChange={this.handleBorderColorChange}/>\r\n                </div>\r\n                <div className =\"property\">\r\n                Border Thickness: \r\n                <TextInput type = \"number\" placeholder=\"Thickness\" value = {controlSelected ? control.borderThickness : 0} id = \"controlBorderThickness\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className =\"property\">\r\n                Border Radius: \r\n                <TextInput type = \"number\" placeholder=\"Radius\" value = {controlSelected ? control.borderRadius : 0} id = \"controlBorderRadius\" onChange={this.handleChange}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Icon, Button, TextInput} from 'react-materialize'\r\nimport { Redirect} from 'react-router-dom';\r\n\r\n\r\nexport default class ControlSelection extends Component {\r\n    state = {\r\n        closing : false\r\n    }\r\n    // Sets the state and indicates this needs to be closed.\r\n    closeWireframe = (e) =>{\r\n        this.setState({\r\n            closing : true\r\n        })\r\n    }\r\n    zoomIn = () =>{\r\n        const wireframeZone = document.getElementById(\"wireframeZone\");\r\n        let className = wireframeZone.getAttribute(\"class\");\r\n        if (className === \"normalZoom\"){\r\n            wireframeZone.setAttribute(\"class\", \"doubleZoom\");\r\n        }\r\n        // If it's at half, make it normal\r\n        if (className === \"halfZoom\"){\r\n            wireframeZone.setAttribute(\"class\", \"normalZoom\");\r\n        }\r\n    }\r\n    zoomOut = () =>{\r\n        const wireframeZone = document.getElementById(\"wireframeZone\");\r\n        let className = wireframeZone.getAttribute(\"class\");\r\n        if (className === \"normalZoom\"){\r\n            wireframeZone.setAttribute(\"class\", \"halfZoom\");\r\n        }\r\n        // If it's at half, make it normal\r\n        if (className === \"doubleZoom\"){\r\n            wireframeZone.setAttribute(\"class\", \"normalZoom\");\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.closing){\r\n            return <Redirect to=\"/\"></Redirect>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className = \"controlsRow1\">\r\n                    <Button\r\n                        large\r\n                        flat\r\n                        node=\"button\"\r\n                        waves=\"light\"\r\n                        onClick = {this.zoomIn}\r\n                    >\r\n                        <Icon small>\r\n                        zoom_in\r\n                        </Icon>\r\n                    </Button>\r\n                    <Button\r\n                        large\r\n                        flat\r\n                        node=\"button\"\r\n                        waves=\"light\"\r\n                        onClick = {this.zoomOut}\r\n                    >\r\n                        <Icon small>\r\n                        zoom_out\r\n                        </Icon>\r\n                    </Button>\r\n                    <Button\r\n                        large\r\n                        flat\r\n                        node=\"button\"\r\n                        waves=\"light\"\r\n                        onClick = {(e)=>this.props.saveData(e)}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        large\r\n                        flat\r\n                        node=\"button\"\r\n                        waves=\"light\"\r\n                        onClick = {(e)=>this.closeWireframe(e)}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </div>\r\n                <div className =\"controlsRow2\"> \r\n                    <div className=\"controlOption\">\r\n                        <div className = \"containerControlOption\" onClick={(e)=>this.props.createNewControl(e)}></div>\r\n                        Container \r\n                    </div>\r\n                    <div className=\"controlOption\">\r\n                        <div className = \"labelControlOption\" onClick={(e)=>this.props.createNewControl(e)}> Prompt for Input</div>\r\n                        Label\r\n                    </div>\r\n                    <div className=\"controlOption\">\r\n                        <div className = \"buttonControlOption\">  \r\n                        <Button\r\n                            node=\"a\"\r\n                            small\r\n                            style={{\r\n                            marginRight: '5px'\r\n                            }}\r\n                            waves=\"light\"\r\n                            // Had to put it in here, the button is an exception.\r\n                            onClick={(e)=>this.props.createNewControl(e)}\r\n                        > Submit\r\n                        </Button>\r\n                    </div>\r\n                    Button\r\n                    </div>\r\n                    <div className=\"controlOption\">\r\n                        <div className = \"textFieldControlOption\" onClick={(e)=>this.props.createNewControl(e)}>\r\n                            <TextInput className = \"textFieldControlOption\" disabled label=\"Input\"/>\r\n                        </div>\r\n                    </div>\r\n                    Textfield\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropertyEditor from './PropertyEditor'\r\nimport ControlSelection from './ControlSelection'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport EditArea from './EditArea';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n// EditScreen must be able to know which wireframe it's working on within the total wireframe array such that\r\n// it can update / delete it. I'll probably have to do this by working around with the keys. Maybe pass the key and all the wireframes down as a prop.\r\n// Maybe theres a more efficient way.\r\n\r\nclass EditScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        // SCUFFED\r\n        if (this.props.location.state !== undefined){\r\n            this.state = {\r\n                wireframe : this.props.location.state.wireframe,\r\n                controlBeingEdited : null\r\n            }\r\n        }\r\n        \r\n        document.body.onkeydown = (e) => {\r\n            if (e.ctrlKey){\r\n                if (this.state.controlBeingEdited != null){\r\n                    if (e.keyCode === 68){\r\n                        this.duplicateControl(this.state.controlBeingEdited);\r\n                    }\r\n                }\r\n            }\r\n            else if(e.keyCode === 46){\r\n                this.removeControl(this.state.controlBeingEdited);  \r\n            }\r\n        }\r\n    } \r\n\r\n\r\n\r\n    duplicateControl(controlToDuplicate){\r\n        const controls = this.state.wireframe.controls;\r\n        let controlCopy = Object.assign({}, controlToDuplicate);\r\n        controlCopy.key = controls.length;\r\n        controlCopy.positionX = controlToDuplicate.positionX + 100;\r\n        controlCopy.positionY = controlToDuplicate.positionY + 100;\r\n        controls.push(controlCopy);\r\n        this.setState({});\r\n    }\r\n    removeControl(controlToRemove){\r\n        const controls = this.state.wireframe.controls;\r\n        controls.splice(controlToRemove.key, 1);\r\n        // Update the key of the remaining elements\r\n        for (var i = controlToRemove.key; i<controls.length;i++){\r\n            controls[i].key = controls[i].key-1;\r\n        }\r\n        // reload after deleting\r\n        this.setState({\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    saveData = (e) =>{\r\n        // UPDATE IN THE FIRESTORE AS WELL\r\n        const firestore = getFirestore();\r\n        // Save the updated controls\r\n        const wireframe = this.state.wireframe;\r\n        const {auth} = this.props;\r\n        var userID= auth.uid;\r\n        const usersWireframes = this.props.location.state.usersWireframes;\r\n        usersWireframes[wireframe.key] = wireframe;\r\n        firestore.collection(\"users\").doc(userID).update({\r\n            wireframes : usersWireframes\r\n        })\r\n        toast(\"The wireframe has been saved.\");\r\n    }\r\n    // Takes in the control's key, which should match the index of the array\r\n    // This key thing depends on the key matching the index of the array, is that reliable?\r\n    setControlBeingEdited = (key,e) =>{\r\n        e.preventDefault();\r\n        let controlBeingEdited = this.state.wireframe.controls[key];\r\n        this.setState({\r\n            ...this.state,\r\n            controlBeingEdited : controlBeingEdited\r\n        })\r\n    }\r\n    deselectControl = (e) =>{\r\n        if (e.target.id === \"wireframeZone\"){\r\n            this.setState({\r\n                controlBeingEdited : null\r\n            })\r\n        }\r\n    }\r\n    handlePropertyChange = (e)=>{\r\n        // Reload this on property change, might be inefficient. Look for a better way.\r\n        this.setState({\r\n            \r\n        })\r\n    }\r\n    // Methods to be sent to and triggered by the ControlSelection\r\n    createNewControl = (e) =>{\r\n        const type = e.target.className;\r\n        // This should never happen, since this page is loaded with a wireframe.\r\n        if (this.state.wireframe == null){\r\n            return;\r\n        }\r\n        let wireframeControls = this.state.wireframe.controls;\r\n        switch(type){\r\n            // Create default container\r\n            case 'containerControlOption':\r\n                wireframeControls.push({\r\n                    key : wireframeControls.length,\r\n                    positionX : 0,\r\n                    positionY: 0,\r\n                    width : 200,\r\n                    height : 100,\r\n                    text : \"\",\r\n                    textSize : 50,\r\n                    backgroundColor : \"#FFFFFF\",\r\n                    borderColor : \"#000000\",\r\n                    borderThickness : 5,\r\n                    borderRadius : 2,\r\n                    type : \"container\"\r\n                })\r\n                break;\r\n            // Default label\r\n            case 'labelControlOption':\r\n                    wireframeControls.push({\r\n                        key : wireframeControls.length,\r\n                        className : \"labelControl\",\r\n                        positionX : 0,\r\n                        positionY: 0,\r\n                        width: 200,\r\n                        height: 50,\r\n                        text : \"Prompt for Input\",\r\n                        textSize : 20,\r\n                        backgroundColor : \"#FFFFFF\",\r\n                        borderColor : \"#000000\",\r\n                        borderThickness : 0,\r\n                        borderRadius : 1,\r\n                        type : \"label\"\r\n                    })\r\n                    break;\r\n            // Default button\r\n            case 'waves-effect waves-light btn-small':\r\n                    wireframeControls.push({\r\n                        key : wireframeControls.length,\r\n                        className : \"buttonControl\",\r\n                        positionX : 0,\r\n                        positionY: 0,\r\n                        width: 92,\r\n                        height: 32,\r\n                        text : \"Submit\",\r\n                        textSize : 16,\r\n                        backgroundColor : \"#26a69a\",\r\n                        borderColor : \"#000000\",\r\n                        borderThickness : 0,\r\n                        borderRadius : 0,\r\n                        type : \"button\"\r\n                    })\r\n                    break;\r\n            // Default text field\r\n            case 'textFieldControlOption':\r\n                wireframeControls.push({\r\n                    key : wireframeControls.length,\r\n                    className : \"textfieldControl\",\r\n                    positionX : 0,\r\n                    positionY: 0,\r\n                    width: 200,\r\n                    height: 100,\r\n                    text : \"Input\",\r\n                    textSize : 16,\r\n                    backgroundColor : \"#FFFFFF\",\r\n                    borderColor : \"#000000\",\r\n                    borderThickness : 1,\r\n                    borderRadius : 0,\r\n                    type : \"textfield\"\r\n                })\r\n                break;\r\n            default:\r\n        }\r\n        // Update after adding, shouldn't this be automatic?\r\n        this.setState({\r\n            \r\n        })\r\n    }\r\n    // Working towards getting the delete control\r\n    deleteControl = (e) =>{\r\n        const controls = this.state.wireframe.controls;\r\n        controls.remove(this.state.controlBeingEdited);\r\n    }\r\n\r\n    // The PropertyEditor only needs to know what control it's working on.\r\n    // The editAreaDiv needs to know the entire wireframe\r\n    // The controlSelection doesn't need to know shit\r\n    render() {\r\n        //console.log(\"EditScreen Render called.\");\r\n        if (this.state == null){\r\n            return <Redirect to = \"/\"></Redirect>\r\n        }\r\n        return (\r\n            <div id = \"editScreenParent\">\r\n                <div id = \"controlSelectionDiv\" className =\"editScreenDiv\"><ControlSelection createNewControl = {this.createNewControl} saveData = {this.saveData}/></div>\r\n                <div id = \"propertyEditorDiv\" className =\"editScreenDiv\">\r\n                    {this.state.wireframe == null ? <PropertyEditor\r\n                    /> :\r\n                    <PropertyEditor\r\n                        controlToEdit = {this.state.controlBeingEdited}\r\n                        handlePropertyChange = {this.handlePropertyChange}\r\n                    />\r\n                    }\r\n                </div>\r\n                <div id = \"editAreaDiv\" className =\"editScreenDiv\"><EditArea wireframe = {this.state.wireframe} controlBeingEdited = {this.state.controlBeingEdited} setControlBeingEdited = {this.setControlBeingEdited} deselectControl = {this.deselectControl}/></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'todoLists' },\r\n    ]),\r\n)(EditScreen);","import React from 'react';\nimport './css/App.css';\nimport './css/layout.css';\nimport './css/styles.css'\nimport { HashRouter, BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport DatabaseTester from './test/DatabaseTester';\nimport Header from './components/header/Header';\nimport LoginScreen from './components/login_screen/LoginScreen';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport RegisterScreen from './components/register_screen/RegisterScreen';\nimport EditScreen from './components/edit_screen/EditScreen';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nfunction App() {\n  //const { auth } = this.props;\n  //if (auth.isLoaded){\n    return (\n      <HashRouter basename='/'>\n        <div className = \"App\">\n        <Header />\n        <Route exact path=\"/\" component={HomeScreen} />\n        <Route path=\"/databaseTester\" component={DatabaseTester} />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/editScreen\" component={EditScreen} />\n        <Route path=\"/:any\" component={HomeScreen} />\n        </div>\n      </HashRouter>\n    );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\n//Need to get\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);\n // Into working condition, such that the website is reloaded upon database change.\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\r\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBcA8HkDyfxfg9_13fPa-qWW5lTDnLnGLQ\",\r\n    authDomain: \"wireframer-41732.firebaseapp.com\",\r\n    databaseURL: \"https://wireframer-41732.firebaseio.com\",\r\n    projectId: \"wireframer-41732\",\r\n    storageBucket: \"wireframer-41732.appspot.com\",\r\n    messagingSenderId: \"105065243096\",\r\n    appId: \"1:105065243096:web:df1296bef069f9b04192ad\",\r\n    measurementId: \"G-LQXQ86V256\"\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\r\nexport default firebase;","import * as actionCreators from '../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\nconst initState = {};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionCreators.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: 'Login fail',\n      };\n    case actionCreators.LOGIN_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.LOGOUT_SUCCESS:\n      return state;\n    case actionCreators.REGISTER_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.REGISTER_ERROR:\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","const initState = {\n    todoLists: []\n};\n\nconst todoListReducer = (state = initState, action) => {\n    switch (action.type) {\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */ \n        default:\n            return state;\n    }\n};\n\nexport default todoListReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer';\nimport todoListReducer from './todoListReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todoList: todoListReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'users',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase,\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\n\nReactDOM.render(\n    <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}